/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package src;

import java.awt.*;
import java.util.List;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        System.out.println(new App().getGreeting());

        int[][] chessboard = { {0, 0, 0, 0, 0},
                               {0, 0, 0, 0, 0},
                               {0, 0, 0, 0, 0},
                               {0, 0, 0, 0, 0},
                               {0, 0, 0, 0, 0}};

        Piece Knight = new Horse(true, 4,4);
        LMove movingKnight = new LMove();
        movingKnight.possibleMoves(chessboard,Knight);
        for (Point moves: movingKnight.movePoints) {
            System.out.println(moves.getX() + " - " + moves.getY());
        }

        /*Piece Pawn = new Pawn(true,4,4);
        PawnMove movingPawn = new PawnMove();
        movingPawn.possibleMoves(chessboard, Pawn);
        for (Point moves: movingPawn.movePoints) {
            System.out.println(moves.getX() + " - " + moves.getY());
        }
        System.out.println("-----------");
        movingPawn.move(4, 2, Pawn);
        movingPawn.possibleMoves(chessboard, Pawn);
        for (Point moves: movingPawn.movePoints) {
            System.out.println(moves.getX() + " - " + moves.getY());
        }System.out.println("-----------");
        movingPawn.move(4, 1, Pawn);
        movingPawn.possibleMoves(chessboard, Pawn);
        for (Point moves: movingPawn.movePoints) {
            System.out.println(moves.getX() + " - " + moves.getY());
        }*/
        /*
        Piece KingWhite = new King(true, 4, 0);
        //Piece RookWhite = new Rook(true, 0, 0);
        Piece RookWhite = new Rook(true, 7, 0);
        //Piece KingBlack = new King(false, 4, 4);
        //Piece RookBlack = new Rook(true, 0, 4);
        //Piece RookBlack2 = new Rook(true, 4, 4);

        System.out.println(KingWhite.getPosX() + "-" + KingWhite.getPosY());
        System.out.println(RookWhite.getPosX() + "-" + RookWhite.getPosY());

        System.out.println("-------------------");

        SpecialMove castling = new SpecialMove();
        castling.castling(KingWhite, RookWhite);
        System.out.println(KingWhite.getPosX() + "-" + KingWhite.getPosY());
        System.out.println(RookWhite.getPosX() + "-" + RookWhite.getPosY());*/
    }
}
